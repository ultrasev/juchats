name: Deploy juchats to miky server

on:
  push:
    branches:
      - deploy-vps


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Create .env file for testing
        env:
          ENV_CONTENT: ${{ secrets.JUCHATS_ENV }}
        run: |
          echo "$ENV_CONTENT" | base64 -d > .env

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Create .env file
        env:
          ENV_CONTENT: ${{ secrets.JUCHATS_ENV }}
        run: |
          echo "$ENV_CONTENT" | base64 -d > ./.env

      - name: Deploy to server
        env:
          SERVER_USER: root
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_PORT: 7058
          PROJECT_DIR: juchats
        run: |
          ssh -p $SERVER_PORT $SERVER_USER@$SERVER_IP "mkdir -p /app/$PROJECT_DIR"
          scp -P $SERVER_PORT .env $SERVER_USER@$SERVER_IP:/app/$PROJECT_DIR/
          scp -P $SERVER_PORT -r ./* $SERVER_USER@$SERVER_IP:/app/$PROJECT_DIR/
          ssh -p $SERVER_PORT $SERVER_USER@$SERVER_IP << EOF
            set -e
            cd /app/$PROJECT_DIR
            docker-compose down --remove-orphans
            docker-compose up -d --build
            echo "Deployment completed successfully"
          EOF
